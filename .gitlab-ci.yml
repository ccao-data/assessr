# TEMPLATE GITLAB-CI FOR CCAO R PACKAGES

# This is a GitLab CI config file used to build CCAO R packages
# Source: https://github.com/jangorecki/r.gitlab.ci/blob/master/.gitlab-ci.yml
image: rocker/r-ver:3.6.3

variables:
  DOCKER_DRIVER: "overlay2"
  GIT_SUBMODULE_STRATEGY: "recursive"
  APT_DEPS: "libcurl4-openssl-dev libssl-dev libxml2-dev libgit2-dev"
  R_LIBS_USER: "$CI_PROJECT_DIR/ci/lib"

cache:
  key:
    files:
      - DESCRIPTION
  paths:
    - .apt
    - $R_LIBS_USER

before_script:
  - rm -f /etc/apt/apt.conf.d/docker-clean
  - mkdir -p .apt && mkdir -p /var/cache/apt/archives && mount --bind .apt /var/cache/apt/archives/
  - apt-get update && apt-get install --no-install-recommends -y ${APT_DEPS}
  - mkdir -p $R_LIBS_USER
  - Rscript -e 'install.packages("remotes")'
  - Rscript -e 'remotes::install_deps(dependencies = TRUE, lib = Sys.getenv("R_LIBS_USER"))'

stages:
  - build
  - test

build:
  stage: build
  only:
    - master
  script:
    - R CMD build . --no-build-vignettes --no-manual
  artifacts:
    name: "$CI_JOB_STAGE"
    expire_in: 2 weeks
    when: on_success
    paths:
      - assessR*.tar.gz
    
test:
  stage: test
  only:
    - master
  script:
    - R CMD check $(ls -1t *.tar.gz | head -n 1) --no-manual --no-build-vignettes --no-tests
    - Rscript -e 'devtools::test(reporter = testthat::JunitReporter$new(file = "test-out.xml"))'
    - Rscript -e 'covr::package_coverage()' 
  artifacts:
    reports:
      junit: test-out.xml
